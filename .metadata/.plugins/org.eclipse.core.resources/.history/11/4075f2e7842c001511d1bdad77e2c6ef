'''
Created on 17 Jul 2015

@author: sduprey
'''

import threading

class my_levenshtein_thread_computer (threading.Thread):
    def __init__(self, threadID, name, Xtrain, ytrain, Xtest, my_categories_chunk):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.my_categories_chunk = my_categories_chunk
    
    def run(self):
        print "Starting " + self.name
        stepping_through_list(self.name, self.my_categories_chunk)
        print "Exiting " + self.name

def stepping_through_list(threadName, my_category_chunk):
    print "%s beginning to deal with its categories %s" % (threadName, str(my_category_chunk))

    print(threadName + 'Testing sample size')
    print(Xtest.shape[0])
    print(Xtest.shape[1])
    
    print(threadName + 'Training sample size')
    print(Xtest.shape[0])
    print(Xtest.shape[1])

    print(threadName + 'Output sample size')
    print(ytrain.shape[0])

    print(threadName +' Training and predicting xgb classifier for each category')
  #        counter -= 1